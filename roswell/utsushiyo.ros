#!/bin/sh
#|-*- mode:lisp -*-|#
#|
exec ros -Q -- $0 "$@"
|#
(progn ;;init forms
  (ros:ensure-asdf)
  (unless (find-package :utsushiyo)
    (ql:quickload '(utsushiyo uiop) :silent t)))

(defpackage :ros.script.utsushiyo
  (:use :cl)
  (:import-from :utsushiyo
  		:make-project-env
  		:delete-project-env
  		:config-dir
  		:get-help
                :project-config-bootstrap))
(in-package :ros.script.utsushiyo)

(defun main (&rest argv)
  (destructuring-bind (&optional command arg1 arg2 arg3 &rest rest) argv
    (declare (ignorable command arg1 arg2 arg3 rest))
    ;; (format t "~A" (utsushiyo:get-help "roswell-script" utsushiyo::*utsushiyo-project*))))
    (cond ((and
    	    (or
    	     (string= command "-h")
    	     (string= command "help"))
    	     arg1 arg2)
    	   (format t "~A" (get-help arg1 arg2)))
    	  ((or
    	    (string= command "-h")
    	    (string= command "help"))
    	   (format t "~A" (utsushiyo:get-help "roswell-script" utsushiyo::*utsushiyo-project*)))
    	  ((or (string= command "-i")
    	       (string= command "init"))
    	   (utsushiyo:bootstrap))
    	  ((or
    	    (string= command "-r"))
    	   (string= command "conf-dir")
    	   (format t "~A" (config-dir (make-project-env arg1))))
    	  ((and
    	    (or (string= command "-e") (string= command "new-project"))
    	    arg1)
    	   (format t "~A" (project-config-bootstrap arg1)))
    	  ((or
    	    (string= command "-s")
    	    (string= command "set-attribute"))
    	   (format t "~A" (utsushiyo:set-attribute arg1 arg2 arg3)))
    	  ((or
    	    (string= command "-g")
    	    (string= command "get-attribute"))
    	   (format t "~A" (utsushiyo:get-attribute arg1 arg2)))
    	  (t
    	   (format t "Invalid Input~%~A~&" "")))));;(get-help "roswell-script" "utsushiyo"))))))
;;; vim: set ft=lisp lisp:
